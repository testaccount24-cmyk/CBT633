PROC 0 DEBUG
/* ----------------------------------------------------------------- */
/*                                                                   */
/* Updated, 21May04, Sam Golob                                       */
/*    Per Lionel Dyck, raised SYSOUTTRAP to 10000.                   */
/*                                                                   */
/* Updated, 21May03, William J. Smith                                */
/* .  Added condition code check for LMDDISP in the event it gener-  */
/*    ates a RC > 0.                                                 */
/* .  Commented code that generated an "in progress" message for     */
/*    large volume list displays.                                    */
/*                                                                   */
/* Updated, 16May03, William J. Smith                                */
/* .  Tested with z/OS 01.03.00 HBB7706 BCPLEVEL=SP7.0.3 JES2 2.10   */
/* .  Removed all PRC modifcations that were dependent upon panel    */
/*    changes to ISRUDL and replaced with standard ISPF LM service   */
/*    calls to display ISPF option 3.4 full-volume data set lists.   */
/* .  Updated to support formatting and displaying of 4-byte UCB     */
/*    addresses...                                                   */
/*    - Changed SUBSTR values to properly index into the trapped     */
/*      DSPACE command output.                                       */
/*    - Changed arithmetic calculations to correctly sort 4-byte     */
/*      UCB addresses.                                               */
/*    - Added support for display of the volume MOUNT attribute.     */
/*    - Removed MODLINE and replace with Z variables in the panel    */
/*      and a corresponding )MODEL statement.                        */
/* .  Added new panel message in support of options B or S.          */
/* .  Increased SYSOUTTRAP limit from 256 to 4096 for systems with   */
/*    large numbers of volumes.                                      */
/* .  Replaced cascading IF statements with a single SELECT/END.     */
/* .  Converted all messages to "new" format with rewriten text.     */
/* .  Removed unused variables.                                      */
/*                                                                   */
/* CHANGE LOG -                                                      */
/*  12/05/86 PTW IMPLEMENTED                                         */
/*  07/27/14 SBG Added support for total number of cylinders on      */
/*               the volume                                          */
/*                                                                   */
/* ----------------------------------------------------------------- */
IF &DEBUG = DEBUG THEN +
  CONTROL NOFLUSH LIST CONLIST SYMLIST
ELSE +
  CONTROL NOFLUSH NOLIST

ISPEXEC VGET (NAME SORT) SHARED

SET OLDNAME = &STR(&NAME)
SET OLDSORT = &STR(&SORT)

IF &STR(&NAME) = &STR( ) THEN +
  DO
    SET NAME    = ONLINE
    SET OLDNAME = ONLINE
  END

ISPEXEC DISPLAY PANEL(FDSPACEP)

IF &LASTCC ¬= 8 THEN +
  DO
    REFRESH: +
    CONTROL NOCONLIST NOLIST
    ISPEXEC CONTROL NONDISPL
    ISPEXEC DISPLAY PANEL(FDSPACEP)
    SET &MSGID =

    ISPEXEC TBCREATE MEMTABLE REPLACE NOWRITE +
                              KEYS(VOLUME UCB) +
                              NAMES(VTOC ATTR CYL TRK EXT CYLC TRKC +
                               NOCY SORTUCB SORTFREE SORTCONT)

    SET &SYSOUTTRAP = 10000
    DSPACE (&NAME)
    SET &SYSOUTTRAP = 0

    SET &LINE = 1
    SET &SL   = &SYSOUTLINE
    SET &LNES = &EVAL(&SYSOUTLINE - 1)

    DO WHILE &LINE < &SL+1
      SET &T = &&SYSOUTLINE&LINE
      SET &SYSDVAL = &STR(&T)
      READDVAL  &A &B &C &D &E &F &G &H &I &J
      IF &DEBUG = DEBUG THEN +
        WRITE A=&A B=&B C=&C D=&D E=&E F=&F G=&G H=&H I=&I J=&J

      SELECT (&A)
        WHEN (&STR(VOLSER)) +
          DO
            SET STEXT = &STR("&NAME" not found)
            SET LTEXT = &STR(+
             VOLSER, UCB, or UNIT "&NAME" not found. Please re-enter)
            SET MSGNUM = &STR(FDS000)
            ISPEXEC SETMSG MSG(&MSGNUM)
          END
        WHEN (&STR(IKJ56702I)) +
          DO
            SET STEXT = &STR("&NAME" not found)
            SET LTEXT = &STR(+
             IKJ56702I Invalid volume... Please re-enter)
            SET MSGNUM = &STR(FDS000)
            ISPEXEC SETMSG MSG(&MSGNUM)
          END
        WHEN (&STR(TSO)) +
          DO
            SET STEXT = &STR("&NAME" not found)
            SET LTEXT = &STR(+
             TSO PARSE ERROR. DSPACE command terminated)
            SET MSGNUM = &STR(FDS000)
            ISPEXEC SETMSG MSG(&MSGNUM)
          END
        OTHERWISE +
          DO
            IF &SUBSTR(1:3,&A) ¬= &STR(VOL) THEN +
              DO
                SET VOLUME = &STR(&A)
                IF &B = &STR(I) THEN +
                  DO
                    SET VTOC = &STR(&B)
                    SET UCB  = &STR(&C)
                    SET ATTR = &STR(&E)
                    SET CYL  = &SUBSTR(7:12,&F)
                    SET TRK  = &STR(&G)
                    SET EXT  = &SUBSTR(1:6,&STR(&H))
                    SET CYLC = &SUBSTR(8:13,&STR(&H))
                    SET TRKC = &STR(&I)
                    SET NOCY = &STR(&J)
                  END
                IF &B ¬= &STR(I) AND &B ¬= &STR(OFFLINE) THEN +
                  DO
                    SET VTOC = &STR( )
                    SET UCB  = &STR(&B)
                    SET ATTR = &STR(&D)
                    SET CYL  = &SUBSTR(7:12,&E)
                    SET TRK  = &STR(&F)
                    SET EXT  = &SUBSTR(1:6,&STR(&G))
                    SET CYLC = &SUBSTR(8:13,&STR(&G))
                    SET TRKC = &STR(&H)
                    SET NOCY = &STR(&I)
                  END
                IF &STR(&B) = &STR(OFFLINE) THEN +
                  DO
                    SET VOLUME = &STR( )
                    SET VTOC   = &STR( )
                    SET UCB    = &STR(&A)
                    SET ATTR   = &STR(OFFLINE)
                    SET CYL    = &STR( )
                    SET TRK    = &STR( )
                    SET EXT    = &STR( )
                    SET CYLC   = &STR( )
                    SET TRKC   = &STR( )
                    SET NOCY   = &STR( )
                  END

/* ----------------------------------------------------------------- */ /
/*                                                                   */ /
/* This routine converts the character mode representation of a      */ /
/* 4-byte UCB address to its numeric equivalent to allow TBSORT to   */ /
/* correctly sort and display it.                                    */ /
/*                                                                   */ /
/* ----------------------------------------------------------------- */ /

                SET CNTR = 1
                DO WHILE &CNTR <= 4
                  SET W&CNTR = &SUBSTR(&CNTR,&UCB)
                  SET DIGIT = &SUBSTR(&CNTR,&UCB)
                  IF &DIGIT = &STR(A) THEN SET W&CNTR = 10
                  IF &DIGIT = &STR(B) THEN SET W&CNTR = 11
                  IF &DIGIT = &STR(C) THEN SET W&CNTR = 12
                  IF &DIGIT = &STR(D) THEN SET W&CNTR = 13
                  IF &DIGIT = &STR(E) THEN SET W&CNTR = 14
                  IF &DIGIT = &STR(F) THEN SET W&CNTR = 15
                  SET CNTR = &CNTR + 1
                END
                SET SORTUCB  = &EVAL(&W1*4096 + &W2*256 + &W3*16 + &W4)
                SET SORTFREE = &STR(&CYL || &TRK)
                SET SORTCONT = &STR(&CYLC || &TRKC)
/* ----------------------------------------------------------------- */
/*              SET LNEC     = &LINE - 1                             */
/*              IF &EVAL(&LNEC//50) = 0 THEN +                       */
/*                DO                                                 */
/*                  ISPEXEC SETMSG  MSG(FDS005)                      */
/*                  ISPEXEC CONTROL DISPLAY LOCK                     */
/*                  ISPEXEC DISPLAY MSG(FDS005)                      */
/*                END                                                */
/* ----------------------------------------------------------------- */
                ISPEXEC TBADD    MEMTABLE
                ISPEXEC TBVCLEAR MEMTABLE
              END
          END
      END
      SET &LINE = &LINE+1
    END

    RESORT: +
    SELECT (&SORT)
      WHEN (&STR( )) +
        ISPEXEC TBSORT MEMTABLE FIELDS(VOLUME C A SORTUCB N A)
      WHEN (1) +
        ISPEXEC TBSORT MEMTABLE FIELDS(VOLUME C A SORTUCB N A)
      WHEN (2) +
        ISPEXEC TBSORT MEMTABLE FIELDS(SORTUCB N A)
      WHEN (3) +
        ISPEXEC TBSORT MEMTABLE FIELDS(SORTFREE B D)
      WHEN (4) +
        ISPEXEC TBSORT MEMTABLE FIELDS(SORTCONT B D)
    END

    ISPEXEC TBTOP MEMTABLE
    ISPEXEC TBDISPL MEMTABLE PANEL(FDSPACEP) +
                             POSITION(ROW) +
                             AUTOSEL(NO) +
                             MSG(&MSGNUM)
    SET &TBDRC = &LASTCC

    DO WHILE &TBDRC < 8
      IF &STR(&MSGNUM) ¬= &STR( ) THEN +
        DO
          SET OLDNAME = &STR(&NAME)
          SET &MSGNUM = &STR( )
          GOTO REFRESH
        END
      ELSE +
        SET &MSGNUM = &STR( )

      IF &STR(&NAME) ¬= &STR(&OLDNAME) THEN +
        DO
          SET OLDNAME = &STR(&NAME)
          GOTO REFRESH
        END

      IF &STR(&SORT) ¬= &STR(&OLDSORT) THEN +
        DO
          SET OLDSORT = &STR(&SORT)
          GOTO RESORT
        END

/* ----------------------------------------------------------------- */
/*                                                                   */
/* The variable ZTDSELS is created by the TBDISPL to indicate the    */
/* number of selected rows.  It includes the current selected row,   */
/* if one exists, and any pending selected rows.  It is an output    */
/* variable whose length is 4.                                       */
/*                                                                   */
/* If either "S" or "B" is selected by one or more volumes, call the */
/* ISPF LMDDISP to cause a "SPACE" view of all data sets on the      */
/* volume to be displayed.  This code supercedes and replaces the    */
/* obsolete PRC modifications to explicitly call ISRUDL with custom  */
/* user modifications.                                               */
/*                                                                   */
/* ----------------------------------------------------------------- */

      IF &ZTDSELS > 0 THEN +
        DO
          IF &STR(&VOLUME) = &STR( ) THEN +
            DO
              ISPEXEC SETMSG MSG(FDS001)
              ISPEXEC TBDISPL MEMTABLE POSITION(ROW) +
                                       AUTOSEL(NO) +
                                       CSRROW(&ROW) +
                                       MSG(FDS001)
              SET &TBDRC = &LASTCC
            END
          ELSE +
            DO
              ISPEXEC LMDINIT LISTID(ID) VOLUME(&VOLUME)

              ISPEXEC CONTROL DISPLAY SAVE
              ISPEXEC LMDDISP LISTID(&ID) VIEW(SPACE) CONFIRM(YES)
              IF &LASTCC > 0 THEN +
                ISPEXEC SETMSG MSG(&ZERRMSG)
              ISPEXEC CONTROL DISPLAY RESTORE

              ISPEXEC LMDFREE LISTID(&ID)

              ISPEXEC TBDISPL MEMTABLE POSITION(ROW) +
                                       AUTOSEL(NO) +
                                       CSRROW(&ROW)
              SET &TBDRC = &LASTCC
            END
        END
      ELSE +
        DO
          ISPEXEC TBDISPL MEMTABLE POSITION(ROW)
          SET &TBDRC = &LASTCC
        END
      CONTROL NOLIST NOCONLIST
    END
    ISPEXEC TBEND MEMTABLE
    ISPEXEC VPUT (NAME SORT) SHARED
  END

